apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "postgresql.fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    component: postgresql
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        component: postgresql
    spec:
      {{- if .Values.postgresql.nodeSelector.enabled }}
      nodeSelector:
      {{- range $key, $value := .Values.postgresql.nodeSelector.labels }}
        {{ $key }}: "{{ $value }}"
      {{- end }}
      {{- end }}
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image }}"
        imagePullPolicy: "{{ .Values.postgresql.imagePullPolicy }}"
        env:
        - name: POSTGRES_USER
          value: postgres
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: postgres
        - name: POSTGRES_DB
          value: postgres
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data/pgdata/
            subPath: peakhealth-pgdb
      - name: metrics
        image: "wrouesnel/postgres_exporter:v0.1.1"
        imagePullPolicy: IfNotPresent
        env:
          - name: DATA_SOURCE_NAME
            value: postgresql://postgres@127.0.0.1:5432?sslmode=disable
        ports:
          - name: metrics
            containerPort: 9187
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
      volumes:
      - name: data
        {{- if .Values.persistence.fromProvider }}
        persistentVolumeClaim:
          claimName: {{ template "pg.fullname" . }}
        {{- else }}
{{ toYaml .Values.persistence.volume | indent 8 }}
        {{- end }}
